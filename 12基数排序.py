'''
多关键排序：假如现在已有一个员工表，要求按照薪资排序，年龄相同的员工，要求按照薪资排序，年龄相同的员工按照年龄排序。

先按照年龄进行排序，再按照新字进行排序

对下拉列数字进行排序（运用桶排序）：

            32   94   52  17  54  93  94


   ———— ———— ———— ———— ———— ———— ———— ———— ———— ————
    0    1    2    3    4    5    6    7    8    9


    首先按照各位排序：


              32   13   54
              52   93   94             17
   ———— ———— ———— ———— ———— ———— ———— ———— ———— ————
    0    1    2    3    4    5    6    7    8    9

    然后按个位数进行输出：

             32   52   13   93   94  54   17


   ———— ———— ———— ———— ———— ———— ———— ———— ————
    0    1    2    3    4    5    6    7    8

    再按十位数进行分桶：

         17             54                       94
         13        32   52                       93
   ———— ———— ———— ———— ———— ———— ———— ———— ———— ————
    0    1    2    3    4    5    6    7    8    9

    最后依次输出：

             13  17  32  52  54  93  94


   ———— ———— ———— ———— ———— ———— ———— ———— ————
    0    1    2    3    4    5    6    7    8

先用各位数排序的原因是，如果我们对多位数排序时一位数和五位数对比时会优先排序出来
'''

def radix_sort(li):
    max_num = max(li)           #找出最大值，获得循环次数    99--->两次      1000---->四次
    it = 0                      #指数，---> 迭代多少次  （因为是从0零开始循环所以循环次数为it+1)
    while 10 ** it <= max_num:  #10的 it次方 <= max_num为循环条件  10^it=1 (10) <= max(99)  中间it由0加到1，所以一共进行了0,1,次循环
        buckets = [[] for _ in range(10)]   #建桶，range（10）分10个桶
        for var in li:          #对于每一个元素把他放到桶里
        it += 1

